
# find if there exist A[i] and A[j] such that A[j] - A[i] = Target = D

# [1,4,4,6,9,12]

# i and j as pointers i @ 0 and j @ 1
# increment i or j based on difference;
# if diff > target: increment i -> to decrease diff as right is bigger number -> if j-i > d then j+1-i > j-i -> 1 > 0. incrementing j increase difference
# if diff < target: increment j -> to increase diff as right is bigger than j -> if j-i < d then j+1-i < j-i -> 1 < 0 contradiction

def find_pair_diff_target(array, target):

    i,j = 0,1

    while i < len(array) and j < len(array):

        x = array[j] - array[i]

        if x == target:
            return True
        elif x > target:
            i += 1
            if i == j:
                j += 1
        elif x < target:
            j += 1

    return False

a = [1,4,4,6,9,13]
b = [0,2,3,4,5,6,7,8,9,10]
c =  [1,2,3,4,5,6,7,8,9,20]

print(find_pair_diff_target(a, 0))   #4-4
# print(find_pair_diff_target(b, 20))   #none
# print(find_pair_diff_target(c, 11))   #20-9
# print(find_pair_diff_target(c, 0))    # none
# print(find_pair_diff_target(b, 2))    # 2-0